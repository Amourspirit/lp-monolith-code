name: Publish Release

on: 
  workflow_run:
    workflows: ["Test Build"]
    branches: [master]
    types:
      - completed

jobs:

  release:    
   name: Publish Release
   runs-on: ubuntu-latest
   steps:
    - name: Download Repository
      uses: actions/checkout@v2
    - name: Detect Version
      run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV  
    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: tester.yml
    - name: Zip Artifacts
      run: |
        cd monolith-code_windows-latest/monolith-code-*/; zip -r ../../monolith-code_win.zip .; cd ../..
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}
        release_name: Release ${{ env.PACKAGE_VERSION }}
        draft: false
        prerelease: false
        
    # Upload Artifacts to release
    - name: Release Windows Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./monolith-code_win.zip
        asset_name: monolith-code_win.zip
        asset_content_type: application/zip    
    - name: Release Linux Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./monolith-code_ubuntu-latest/monolith-code_ubuntu-latest.tar
        asset_name: monolith-code_linux.tar
        asset_content_type: application/tar
    - name: Release MacOS Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./monolith-code_macos-latest/monolith-code_macos-latest.tar
        asset_name: monolith-code_mac.tar
        asset_content_type: application/tar
    - name: Release Checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sha512sums.txt
        asset_name: sha512sums.txt
        asset_content_type: text/plain
